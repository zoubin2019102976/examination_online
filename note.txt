1.场景: 将远程仓库和本地仓库关联,先有本地仓库，再有远程仓库
如果远程仓库初始化为空（没有.gitgnore/LICENSE/README.md等文件），可以直接和本地仓库关联
本地：
git init
git add something(某些文件或全部文件: *)
git commit -m "some message"
git branch -M main (注意：现在是main而不是master)
git remote add origin https://github.com/zoubin2019102976/examination_online.git (关联远程仓库)
git push -u origin main

但是如果该远程仓库不空：
则在push之前，需要：
git pull --rebase origin main (合并远程仓库到本地)
git push -u origin master
原因：因为此时远程仓库有本地没有的文件，本地不和远程同步，此时本地push会出现冲突性错误。所以需要将远程仓库与本地仓库进行一次合并同步。


2.场景：如果是从远程克隆过来的仓库，在push时，需要注意是master还是main
有的是main，有的是master
同时，在此场景下，进行push操作时，不用输入账号和密码（与场景1有区别）

3.HEAD指向的并不是真的提交，而是当前分支，当前分支指向的是提交.

4.删除分支：
	git branch -d name_of_branch

5.有时，分支之间可能会出现冲突而无法合并，比如两个分支都存在更新，此时需要编辑发生冲突的文件位置进行修改，再提交合并即可。
 (1)git status: 查看冲突位置
 (2)编辑冲突文件冲突位置
 (3)重新提交，更新
 (4)git log --graph --pretty=oneline --abbrev-commit  //图形化分支合并状态
 冲突还有一种理解方式就是：两个分支同时编辑了一个文件。

6.如果合并分支使用Fast-forward模式，当删除分支时，会丢失分支信息。此时
merge操作可以加 --no-ff参数，在merge时会生成一个新的commit,这样，从分支
历史上就可以看出分支信息 fix issue bug #101。
